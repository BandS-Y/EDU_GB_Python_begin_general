# Программа перевода секунд в стандартное время

in_sec = int(input("ведите пачку секунд: ")) #запрашиваем секунды для конвертации

# in_sec = 10000 # для отладки

# Алгоритм, который придумал сам исходя из текущих знаний:

hour = in_sec // 3600
minutes = (in_sec % 3600) // 60
sec = ((in_sec % 3600) % 60)
print(f"{hour:02}:{minutes:02}:{sec:02}")

# Пока писал, подумал, что можно сделать рекурсией...

def sec_to_time(hour, minutes, in_sec): # рекурсивная функция получения времени из секунд
    if in_sec < 60:
        return hour, minutes, in_sec #если секунд осталось меньше 60, то возвращаем остаток и сворачиваемся
    elif in_sec >= 60: #если секунд больше 60, то
        in_sec -= 60  #отнимаем секуды для минуты
        minutes += 1  #увеличиваем минуты
        if minutes >= 60: #есил минут больше 60, то
            minutes -= 60 #отнимаем минуты для часов1
            hour += 1 #увеличиваем часы
    hour, minutes, in_sec = sec_to_time(hour, minutes, in_sec) #вызываем фукцию для остатка секунд
    return hour, minutes, in_sec

if in_sec <= 59500: #при тестировании у меня вылетала ошибка при 60 000 секунд
    print("{t[0]:02}:{t[1]:02}:{t[2]:02}".format(t=sec_to_time(0, 0, in_sec)))
else:
    print("слишком большая вложенность, этот метод выдаст ошибку")

#из того, что я нашел в инете и при этом чисто математических мне больше понравился этот метод

minutes, sec = divmod(in_sec, 60)
hour, minutes = divmod(minutes, 60)
print(f"{hour:02}:{minutes:02}:{sec:02}")